# 「シンボル」 = 整数をRubyコード上で表現したもの。
# 意味は？•••Rubyの内部では、メソッド名や変数名、クラス名などの"名前"を"整数"で管理している。
#           これは名前を文字列で処理するよりも整数で処理する方が速いからです。
#           シンボルとは、見た目が文字列のようですが、内部では整数として扱われるオブジェクトということ

# シンボルの書き方は、文字列の前にコロン(:)をつけます。("")などで囲む必要はありません。
webcamp =:プログラミング学習
puts webcamp

# シンボルと文字列の違い
# 「シンボル」
# ①コロン(:)で定義する。以下例↓
# シンボルは「:プログラミング学習」、文字列は「"プログラミング学習"」
# ②シンボルは書き換えられない。
# ③シンボルは処理が高速
# シンボルは整数で管理しているため、文字列より高速に処理が行われる。
# ④シンボルは一意性がある。以下例↓
# 「object_id」 = オブジェクト固有のidを取得できる
# object_idを用いて一意性を証明します。
#文字列オブジェクト
dog1 = "犬"
dog2 = "犬"
#シンボルオブジェクト
dog3 = :犬
dog4 = :犬

puts dog1.object_id
puts dog2.object_id
puts dog3.object_id
puts dog4.object_id

# 実行すると結果は以下の通り↓
# <文字列オブジェクト>
# 60
# 80
# <シンボルオブジェクト>
# 1084188
# 1084188
# ↑上記の通りシンボルはidが同じことから一意性があることがわかる！

# どういう時に使うべきか
# シンボルは処理が高速であるため、検索などに使用すると良いです。
# 「データ型を学ぼう」で学習したハッシュのキーなどが挙げられる。

tall = {:太郎=>185,:二郎=>170,:花子=>150}
puts tall[:太郎]
